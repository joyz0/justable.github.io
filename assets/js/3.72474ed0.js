(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{205:function(t,a,s){t.exports=s.p+"assets/img/16.84e82fbd.png"},206:function(t,a,s){t.exports=s.p+"assets/img/5.bf2d7f12.png"},207:function(t,a,s){t.exports=s.p+"assets/img/6.d395847f.png"},208:function(t,a,s){t.exports=s.p+"assets/img/10.2a71e69a.png"},209:function(t,a,s){t.exports=s.p+"assets/img/11.718f3443.png"},210:function(t,a,s){t.exports=s.p+"assets/img/12.56591903.png"},211:function(t,a,s){t.exports=s.p+"assets/img/13.1d6a14ad.png"},212:function(t,a,s){t.exports=s.p+"assets/img/14.cf2a9916.png"},213:function(t,a,s){t.exports=s.p+"assets/img/7.7161f440.png"},214:function(t,a,s){t.exports=s.p+"assets/img/9.b9495181.jpg"},215:function(t,a,s){t.exports=s.p+"assets/img/19.73a09d1b.png"},216:function(t,a,s){t.exports=s.p+"assets/img/20.3be81cf0.png"},217:function(t,a,s){t.exports=s.p+"assets/img/1.1a43b486.png"},218:function(t,a,s){t.exports=s.p+"assets/img/2.b663fe89.png"},219:function(t,a,s){t.exports=s.p+"assets/img/3.3655a4f9.png"},220:function(t,a,s){t.exports=s.p+"assets/img/4.d42cde62.png"},269:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("先讲句利于我自己理解后文的废话：在 GPU shipping pixels to screen 前，任何操作其实都只是对数学模型的计算。")])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://developers.google.cn/web/fundamentals",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome Web 开发者文档"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://docs.microsoft.com/en-us/microsoft-edge/web-platform/user-agent-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("Edge(Chromium) Web 开发者文档"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"名词索引"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#名词索引"}},[t._v("#")]),t._v(" 名词索引")]),t._v(" "),n("ul",[n("li",[t._v("位图（bitmap）：描述物体及其颜色的数据结构，浏览器可以用位图来记录他想在某个区域绘制的内容，绘制的过程也就是往数组中具体的下标里填写像素而已。")]),t._v(" "),n("li",[t._v("纹理：好比 GPU 中的位图，存储在 GPU video RAM（VRAM） 中，固定格式且有大小限制，所以浏览器将图像分块光栅化后需要再转成纹理传输给 GPU，最终 GPU 根据这些纹理 shipping pixels to screen。")]),t._v(" "),n("li",[t._v("Rasterize(光栅化)：光栅化是将一个图元（要显示的图像）转变为一个二维图像（位图）的过程。二维图像上每个点都包含了颜色、深度和纹理数据，将该点和相关信息叫做一个片元（fragment）。早年的浏览器采用 Full-screen Rasterization 把整个图像进行光栅化，现代的浏览器基本都采用 Tile-Based Rasterization，把图像分块成 tile，对每个 tile 单独光栅化，所有很大的图片不会一次性呈现，而是分段呈现，这样做的好处是减少了单次内存占用率，更好的发挥了多线程并行处理的优势，页面展示的更流畅。\n"),n("img",{attrs:{src:s(205),alt:""}})]),t._v(" "),n("li",[t._v("Paint：把像素填充进位图")]),t._v(" "),n("li",[t._v("Composite：组合各个 Layer 位图，在 GPU 中执行")])]),t._v(" "),n("h2",{attrs:{id:"renderer-process-和-gpu-process"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#renderer-process-和-gpu-process"}},[t._v("#")]),t._v(" Renderer Process 和 GPU Process")]),t._v(" "),n("p",[n("img",{attrs:{src:s(206),alt:""}}),t._v(" "),n("img",{attrs:{src:s(207),alt:""}}),t._v("\n引用自"),n("a",{attrs:{href:"https://aerotwist.com/blog/the-anatomy-of-a-frame/",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("Renderer 进程：每个 tab 页一个，包含以下 3 个线程\n"),n("ol",[n("li",[t._v("Compositor Thread：接收 vsync 信号（OS 通知浏览器开始新一帧的信号）和 用户交互的 I/O 信号（比如滚动、点击、鼠标移动等等）。它就像一个浏览器的外交官，负责和 OS 进行交流，很多场景（比如「touchmove, scroll, click」）还会亲力亲为，若有绑定回调则快速响应用户的同时唤醒 Main Thread 处理回调，若没有则直接响应用户。")]),t._v(" "),n("li",[t._v("Main Thread：负责处理一系列 tasks，浏览器未来的趋势会把这里的一些事务转给 Compositor Thread 处理。")]),t._v(" "),n("li",[t._v("Compositor Tile Worker(s)：由 Compositor Thread 创建，专门用来处理 tile 的光栅化。")])])]),t._v(" "),n("li",[t._v("GPU 进程：整个浏览器共用一个，只有一个线程 GPU Thread。主要是负责把 绘制好的 tile 位图作为纹理上传至 GPU。")])]),t._v(" "),n("p",[t._v("Compositor Thread 可能在一帧的时间内（一帧的时间会受实际卡顿情况影响）接收到 OS 传来的多次 I/O 交互信号，最终都会节流成一次传递给 Main Thread，所以说「touchmove, scroll, click」这些事件每帧只会触发一次。")]),t._v(" "),n("p",[t._v("Main Thread 中的每个步骤只会在需要时执行，优化性能的一个很好方式就是移除其中某一环节。")]),t._v(" "),n("p",[t._v("具体介绍可以参考"),n("a",{attrs:{href:"https://juejin.im/entry/590801780ce46300617c89b8",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"强制同步重排"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强制同步重排"}},[t._v("#")]),t._v(" 强制同步重排")]),t._v(" "),n("p",[t._v("上节展示的图中红线箭头表示的是强制同步重排（Forced Synchronous Layout or Styles）。我们可以从 Chrome 的 Performance 中分析然后进行优化，这儿是个"),n("a",{attrs:{href:"https://justable.github.io/demos/front/static/forcedsync.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("分析用例"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("先按照例子中的步骤走完，可以看到\n"),n("img",{attrs:{src:s(208),alt:""}}),t._v("\n每帧大约 150ms，这算很卡了。我们把范围缩小到一帧左右可以更清楚的看清 Main Thread 在每帧所执行的内容\n"),n("img",{attrs:{src:s(209),alt:""}}),t._v("\n从调用栈不难猜出 update 就是 requestAnimationFrame 的回调函数，update 下面很多的紫块，带有红色的是 DevTools 在警告页面可能会被强制自动重排，强制自动重排是强制同步布局的另一种说法。"),n("br"),t._v("\n在下方的 Summary Panel 中标识了发生强制重排的源码位置，点击进入查看\n"),n("img",{attrs:{src:s(210),alt:""}}),t._v("\nMain Thread 遇到代码修改了"),n("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("会影响元素布局信息的 CSS 样式"),n("OutboundLink")],1),t._v("时，会标记 layout dirty=true，在下一帧再判断若 dirty=true，则执行 Layout 步骤。这个例子每次根据图像的 offsetTop 值计算其 left 属性，而对元素 offsetTop 的访问会立即触发当前帧的重排（当 dirty=true 时，为了确保 offsetTop 的准确性必须在当前帧立即重排），并设置 layout dirty=false。除了访问 offsetTop 会触发立即重排外，还有\n"),n("img",{attrs:{src:s(211),alt:""}}),t._v("\n接下来我们直接在 DevTool 中对代码进行修改，因为是内嵌在 html 中的 script 块所以无法直接编辑，我们复制整个 update 函数到 Console Panel 中，删除使用 offsetTop 的语句并取消注释其下面的语句，然后执行，浏览器就会覆盖原有的 update 函数，更新后的 Performance 图\n"),n("img",{attrs:{src:s(212),alt:""}}),t._v("\n举个更直观的例子：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" container "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"container"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = false")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不relayout")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = false")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不relayout")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = false")]),t._v("\ncontainer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100px"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下帧再relayout")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = true")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立即relayout")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = false")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不relayout")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = false")]),t._v("\ncontainer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#fff"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下帧再repaint")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dirty = true")]),t._v("\n")])])]),n("h2",{attrs:{id:"task-和-microtask"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#task-和-microtask"}},[t._v("#")]),t._v(" task 和 microtask")]),t._v(" "),n("ul",[n("li",[t._v("task（macrotask）：主代码块，setTimeout，setInterval 等（可以看到，事件队列中的每一个事件都是一个 macrotask）")]),t._v(" "),n("li",[t._v("microtask：Promise，process.nextTick 等")])]),t._v(" "),n("p",[t._v("举个例子：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output：1，2，3，4，5，6，7，8，9")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"浏览器渲染原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[t._v("#")]),t._v(" 浏览器渲染原理")]),t._v(" "),n("p",[n("img",{attrs:{src:s(213),alt:""}})]),t._v(" "),n("ul",[n("li",[t._v("LayoutObject：LayoutObject 树是基于 DOM 树建立起来的一棵新树，是为了布局计算和渲染等机制而构建的一种新的内部表示。LayoutObject 树节点和 DOM 节点并不是一一对应。LayoutObject 存放了浏览器将 DOM 节点绘制进位图时所需要的信息，比如背景、边框、文字内容等等。WebKit 在创建 DOM 树的同时也创建 LayoutObject 对象。详细介绍请参考"),n("a",{attrs:{href:"https://www.jianshu.com/p/60174ad4a8c6",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[t._v("PaintLayer：浏览器靠着遍历 LayoutObject 树来绘制位图时，只能按照 DOM 节点顺序覆盖，无法解决层叠关系，所以有了 PaintLayer，PaintLayer 和 LayoutObject 是一对多的关系。每个 PaintLayer 的子 PaintLayer 都按照升序排列存储在两个有序列表当中，negZOrderList 存储了负 z-indices 的子 layers，posZOrderList 存储了正 z-indices 的子 layers，渲染引擎遍历 PaintLayer 树，访问每一个 PaintLayer，然后递归遍历 negZOrderList 里的 layer、自己的 LayoutObject、再递归遍历 posZOrderList 里的 layer，就可以将一颗 PaintLayer 树绘制出来。不提升为 PaintLayer 的 LayoutObject 从属于其父级元素中最近的那个 PaintLayer，根元素 HTML 自己会先提升为 PaintLayer。")]),t._v(" "),n("li",[t._v("GraphicsLayer(合成层)和 GraphicsContext(2D 图形上下文)：无论 LayoutObject 树还是 PaintLayer 树，最终都会绘制到一层位图中，如果页面中有 animation、video、canvas、3d 效果这些频繁变动的元素时，比如每秒 60 帧的动画，每次变动都重绘整个位图是很恐怖的性能开销。所以有了 GraphicsLayer 和 GraphicsContext，只有 SelfPaintLayer（基本可认为是 NormalPaintLayer） 才能提升为 GraphicsLayer ，每个 PaintLayer 都属于他祖先中最近的那个 GraphicsLayer，根元素 HTML 自己会先提升为 GraphicsLayer。每层 GraphicsLayer 都会有一层独立的位图（副作用是占用了更多的内存）。\n"),n("img",{attrs:{src:s(214),alt:""}})])]),t._v(" "),n("h3",{attrs:{id:"提升为-graphicslayer（硬件-gpu-加速）有以下几点好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#提升为-graphicslayer（硬件-gpu-加速）有以下几点好处"}},[t._v("#")]),t._v(" 提升为 GraphicsLayer（硬件 GPU 加速）有以下几点好处")]),t._v(" "),n("ol",[n("li",[t._v("GraphicsLayer 的位图会交由 GPU 合成，比 CPU 处理要快")]),t._v(" "),n("li",[t._v("当需要 repaint 时，只需要 repaint 本身，不会影响到其他的层")]),t._v(" "),n("li",[t._v("对于 transform， opacity，filter 效果，不会触发 layout 和 paint")])]),t._v(" "),n("p",[t._v("将元素提升为 GraphicsLayer，一个是可以起到层隔离 paint 的作用，另一个是对于 transform， opacity，filter 属性的动画，可以由 GPU 内部完成变换；如果是 left 等属性，则浏览器仍需要交由 CPU paint，然后再每帧以纹理的形式发送给 GPU"),n("a",{attrs:{href:"https://engineering.gosquared.com/optimising-60fps-everywhere-in-javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章 1"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"https://ariya.io/2013/06/optimizing-css3-for-gpu-compositing",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章 2"),n("OutboundLink")],1),t._v("，此时 GraphicsLayer 的作用仅仅是隔离渲染？")]),t._v(" "),n("p",[t._v("3D 变换的元素会提前提升为 GraphicsLayer；2D 变换则是动态的在开始时提升为 GraphicsLayer，结束后删除 GraphicsLayer。如果我们查看 2D 变换的 Performance，会发现开始和结束时分别有一个 repaint 阶段，就是新增和删除 GraphicsLayer 导致的。非 transform， opacity，filter 的动画浏览器不会自动提升为 GraphicsLayer。")]),t._v(" "),n("p",[n("RouterLink",{attrs:{to:"chrome://gpu/"}},[t._v("本机 Chrome 浏览器的加速情况")])],1),t._v(" "),n("p",[t._v("硬件加速的相关介绍可以参考"),n("a",{attrs:{href:"https://www.sitepoint.com/introduction-to-hardware-acceleration-css-animations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"总结优化场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结优化场景"}},[t._v("#")]),t._v(" 总结优化场景")]),t._v(" "),n("ol",[n("li",[t._v("经常变动的并且浏览器不会自动提升为 GraphicsLayer 的动画类元素，手动提升为 GraphicsLayer")])]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// 新型浏览器\n#target")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("will-change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// 不支持will-change的浏览器\n#target")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("translateZ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("使用 transform 来替代 left 之类 和 opacity 来实现动画效果，这会跳过 Layout 和 Paint 阶段，直接由 GPU 进行变换展示。目前 GPU 只支持 transform，opacity，filter 属性的变换。\n"),n("img",{attrs:{src:s(215),alt:""}}),t._v(" "),n("img",{attrs:{src:s(216),alt:""}})]),t._v(" "),n("li",[t._v("避免使用 box shadows 或 gradients 等这些 repaint 成本高的属性做动画。")]),t._v(" "),n("li",[t._v("把固定不变且频繁显示的元素，比如一个 fix 在页面顶部的固定不变的导航提升为 GraphicsLayer")]),t._v(" "),n("li",[t._v("面对层爆炸且浏览器"),n("a",{attrs:{href:"https://fed.taobao.org/blog/2016/04/25/performance-composite/",target:"_blank",rel:"noopener noreferrer"}},[t._v("无法自动合并层的情况"),n("OutboundLink")],1),t._v("，我们要找到无法合并的原因防止层爆炸")])]),t._v(" "),n("h3",{attrs:{id:"哪些因素会导致-layoutobject-集合提升为-paintlayer-呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哪些因素会导致-layoutobject-集合提升为-paintlayer-呢？"}},[t._v("#")]),t._v(" 哪些因素会导致 LayoutObject 集合提升为 PaintLayer 呢？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("NormalPaintLayer")]),t._v(" "),n("ul",[n("li",[t._v("根元素（HTML）")]),t._v(" "),n("li",[t._v("有明确的定位属性（relative、fixed、sticky、absolute）")]),t._v(" "),n("li",[t._v("透明的（opacity 小于 1）")]),t._v(" "),n("li",[t._v("有 CSS 滤镜（fliter）")]),t._v(" "),n("li",[t._v("有 CSS mask 属性")]),t._v(" "),n("li",[t._v("有 CSS mix-blend-mode 属性（不为 normal）")]),t._v(" "),n("li",[t._v("有 CSS transform 属性（不为 none）")]),t._v(" "),n("li",[t._v("backface-visibility 属性为 hidden")]),t._v(" "),n("li",[t._v("有 CSS reflection 属性")]),t._v(" "),n("li",[t._v("有 CSS column-count 属性（不为 auto）或者 有 CSS column-width - 属性（不为 auto）")]),t._v(" "),n("li",[t._v("当前有对于 opacity、transform、fliter、backdrop-filter 应用动画")])])]),t._v(" "),n("li",[n("p",[t._v("OverflowClipPaintLayer")]),t._v(" "),n("ul",[n("li",[t._v("overflow 不为 visible")])])]),t._v(" "),n("li",[n("p",[t._v("NoPaintLayer")]),t._v(" "),n("ul",[n("li",[t._v("不需要 paint 的 PaintLayer，比如一个没有视觉属性（背景、颜色、阴影等）的空 div。")])])])]),t._v(" "),n("h3",{attrs:{id:"哪些因素会导致-selfpaintlayer-集合提升为-graphicslayer-呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哪些因素会导致-selfpaintlayer-集合提升为-graphicslayer-呢？"}},[t._v("#")]),t._v(" 哪些因素会导致 SelfPaintLayer 集合提升为 GraphicsLayer 呢？")]),t._v(" "),n("ul",[n("li",[t._v("⭐️3D 或透视变换(perspective、transform) CSS 属性")]),t._v(" "),n("li",[t._v("⭐️ 包含 opacity、transform 的 CSS 过渡和动画")]),t._v(" "),n("li",[t._v("拥有 3D (WebGL) 上下文或加速的 2D 上下文的 元素")]),t._v(" "),n("li",[t._v("对 opacity、transform、fliter、backdropfilter 应用了 animation - 或者 transition（需要是 active 的 animation 或者 transition，当 - animation 或者 transition 效果未开始或结束后，提升合成层也会失效）")]),t._v(" "),n("li",[t._v("⭐️will-change 设置为 opacity、transform、top、left、bottom、right（其中 top、left 等需要设置明确的定位属性，如 relative 等）")]),t._v(" "),n("li",[t._v("拥有加速 CSS 过滤器的元素")]),t._v(" "),n("li",[t._v("元素有一个 z-index 较低且包含一个复合层的兄弟元素(换句话说就是该元素在- 复合层上面渲染)")]),t._v(" "),n("li",[t._v("⭐️overlap 重叠原因")]),t._v(" "),n("li",[t._v("更多参考"),n("a",{attrs:{href:"https://fed.taobao.org/blog/2016/04/25/performance-composite/",target:"_blank",rel:"noopener noreferrer"}},[t._v("淘宝 fed 文章"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("GraphicsLayer 在处理动画有很好的优势，但我们要注意的是它会占用内存，如果我们手动为不经常变动的元素肆意添加 will-change，则会导致内存的浪费，反而降低了性能。并且对于一次性或不频繁的动画，比如一个按钮点击后触发一个动画效果的场景，最好在 button 的 hover 事件中动态的为目标添加 will-change，在 animationEnd 事件中再把 will-change 去除，释放内存。")]),t._v(" "),n("h2",{attrs:{id:"event-loop？？？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop？？？"}},[t._v("#")]),t._v(" Event loop？？？")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("html5 官方规范"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("Event loop 不是浏览器帧，而是 JS 引擎（或者说 Main Thread？）的调度模型。")])]),t._v(" "),n("ol",[n("li",[t._v("从多个 task 队列中里选出一个 task 队列（浏览器为了区分不同 task 的优先级，所以时常有多个 task 队列），从这个 task 队列中取出最老的那个 task，执行他，然后把他从队列中去除。")]),t._v(" "),n("li",[t._v("perform a microtask checkpoint，这个步骤其实包含了多个子步骤，只要 microtask queue 不空，这一步会一直从 microtask queue 中取出 microtask，执行之。如果 microtask 执行过程中又添加了 microtask，那么仍然会执行新添加的 microtask。")]),t._v(" "),n("li",[t._v("Update the rendering（更新渲染），")]),t._v(" "),n("li",[t._v("run the resize steps")]),t._v(" "),n("li",[t._v("run【the scroll steps（是个队列，存放期间发生过 scroll 的 target）】")]),t._v(" "),n("li",[t._v("更新、渲染用户界面")])]),t._v(" "),n("h2",{attrs:{id:"时间分片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间分片"}},[t._v("#")]),t._v(" 时间分片")]),t._v(" "),n("p",[t._v("要分辨屏幕刷新率和浏览器渲染帧，在硬件运行正常情况下为 60FPS，浏览器渲染帧可能因为耗时的同步任务导致渲染帧超过 16.67ms。")]),t._v(" "),n("p",[t._v("时间分片要做的就是把“大块的渲染帧”合理切分成多个“细小的渲染帧”，理想是和屏幕刷新率一致。时间分片通常可以依靠 requestAnimationFrame 和 requestIdleCallback 实现。可以参考"),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/37095662",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Faber"),n("OutboundLink")],1),t._v("中的时间分片。")]),t._v(" "),n("h2",{attrs:{id:"浏览器兼容性检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性检查"}},[t._v("#")]),t._v(" 浏览器兼容性检查")]),t._v(" "),n("p",[t._v("可以去这个"),n("a",{attrs:{href:"http://html5test.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("网站"),n("OutboundLink")],1),t._v("，它会检测当前的浏览器兼容性")]),t._v(" "),n("h2",{attrs:{id:"获取节点宽度问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取节点宽度问题"}},[t._v("#")]),t._v(" 获取节点宽度问题")]),t._v(" "),n("p",[t._v("clientWidth=width+padding"),n("br"),t._v("\noffsetWidth=width+padding+border"),n("br"),t._v("\nscrollWidth=滚动距离")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px solid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*box-sizing: border-box*/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}},[n("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clientWidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// content-box：200px border-box：196px")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" offsetWidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// content-box：204px border-box：200px")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" scrollWidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scrollWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// content-box：300px border-box：300px")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当出现垂直滚动条时")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMac")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    审查元素时的width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("200px")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    审查元素时的width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("183px")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否处在mac系统中")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMac")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("macintosh"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mac os x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userAgent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h2",{attrs:{id:"viewport"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#viewport"}},[t._v("#")]),t._v(" Viewport")]),t._v(" "),n("p",[t._v("viewport 分为 layout viewport，visual viewport，ideal viewport，注意这些都是指独立像素而非物理像素/手机尺寸")]),t._v(" "),n("ul",[n("li",[t._v("PC 浏览器的 layout viewport 是严格等于浏览器窗口的，移动端浏览器为了能够适应 PC 的网站，把 layout viewport 默认设置为 980px，这样即使页面是按百分比布局，在移动端显示时也不会极度变形，可以通过 document.documentElement.clientWidth 得到 layout viewport 值；\n"),n("img",{attrs:{src:s(217),alt:""}})]),t._v(" "),n("li",[t._v("visual viewport 决定可视区域大小，可视区域大小可随浏览器缩放而变化，PC 浏览器的 visual viewport 默认等于 layout viewport，可以通过 window.innerWidth 得到 visual viewport 的值；\n"),n("img",{attrs:{src:s(218),alt:""}})]),t._v(" "),n("li",[t._v("ideal viewport 是每个手机厂商设定的一个理想大小，所谓的理想是指不需要用户缩放和横向滚动条就能正常的查看网站的所有内容，显示的文字的大小是合适（确定仅靠手机浏览器支持而不需要开发者适配？），每个手机厂商设置的不一定一样，比如苹果手机都为 320px。"),n("br"),t._v("\nmeta 的 viewport 属性中，")]),t._v(" "),n("li",[t._v("width 是来控制 layout viewport 的，当 width=device-width 时表示把 layout viewport 设置为 ideal viewport，不过在 iphone 和 ipad 上，无论是竖屏还是横屏，宽度都是竖屏时 ideal viewport 的宽度；\n"),n("img",{attrs:{src:s(219),alt:""}})]),t._v(" "),n("li",[t._v("initial-scale 表示初始的缩放比，它是相对于 ideal viewport 的，所以当 initial-scale=1 时，等价于 width=device-width，公式为 layout viewport = ideal viewport / initial-scale；\n"),n("img",{attrs:{src:s(220),alt:""}})]),t._v(" "),n("li",[t._v("当 width 和 initial-scale 同时出现时，浏览器会取较大值作为 layout viewport，并同时解决了兼容问题。")]),t._v(" "),n("li",[t._v("devicePixelRatio 为设备物理像素和设备独立像素的比例，devicePixelRatio = 物理像素 / 独立像素，CSS 中的 px 代表的就是这独立像素。")]),t._v(" "),n("li",[t._v("visual viewport = ideal viewport / 当前缩放值")]),t._v(" "),n("li",[t._v("当前缩放值 = ideal viewport / visual viewport")]),t._v(" "),n("li",[t._v("initial-scale 在安卓机中没有默认值，只有设置了 initial-scale 才会生效，在苹果系列中，会自动计算 initial-scale 这个值，以保证 visual viewport 中能完全展现 layout viewport，也就是说不会出现横向滚动条，那么此时的 visual viewport=layout viewport=980，即 initial-scale = 320 / 980")]),t._v(" "),n("li",[t._v("当 initial-scale=0 时代表什么？")])]),t._v(" "),n("h2",{attrs:{id:"references"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://jankfree.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://jankfree.org/"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://tech.domain.com.au/2016/11/website-jank-busting-part-3-of-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://tech.domain.com.au/2016/11/website-jank-busting-part-3-of-3/"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.im/entry/59dc9aedf265da43200232f9",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/entry/59dc9aedf265da43200232f9"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000020926189",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000020926189"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"http://fouber.github.io/test/layer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://fouber.github.io/test/layer/"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://drafts.csswg.org/cssom-view/#run-the-resize-steps",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://drafts.csswg.org/cssom-view/#run-the-resize-steps"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);