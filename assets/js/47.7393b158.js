(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{300:function(t,s,e){"use strict";e.r(s);var o=e(28),n=Object(o.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"jwt-的诞生"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jwt-的诞生"}},[t._v("#")]),t._v(" JWT 的诞生")]),t._v(" "),e("p",[t._v("一项技术的诞生必然是为了解决那个时代面临的某个问题。")]),t._v(" "),e("p",[t._v("传统的用户认证流程是客户端发送用户账号密码，服务端接收并存储到 session 中(内存中)，并返回 session_id 并写入到 cookie 中，用户之后的一系列请求都会通过 cookie 把 session_id 传递给服务端。")]),t._v(" "),e("p",[t._v("但是在分布式架构的后端应用中，就会出问题，因为用户的登录信息只会被分配到集群中的某一台服务器中的 session 中，其他服务器无法获取。")]),t._v(" "),e("p",[t._v("一种解决思路是把 session 持久化，集群中的每台服务器都去持久层获取；")]),t._v(" "),e("p",[t._v("另一种解决思路就是干脆在服务端不保存 session 了，而是保存在客户端，客户端每次请求都发回服务端。这必然导致安全问题，JWT 就是来实现此思路的具体方案。")])])}),[],!1,null,null,null);s.default=n.exports}}]);