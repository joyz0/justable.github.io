(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{282:function(t,r,e){"use strict";e.r(r);var s=e(28),a=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#git-push-时出现-the-current-branch-dev-has-no-upstream-branch"}},[t._v("git push 时出现 The current branch dev has no upstream branch")])]),e("li",[e("a",{attrs:{href:"#refusing-to-merge-unrelated-histories"}},[t._v("refusing to merge unrelated histories")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"git-push-时出现-the-current-branch-dev-has-no-upstream-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push-时出现-the-current-branch-dev-has-no-upstream-branch"}},[t._v("#")]),t._v(" git push 时出现 The current branch dev has no upstream branch")]),t._v(" "),e("p",[t._v("出现这种情况主要是由于远程仓库太多，且分支较多。在默认情况下，git push 时一般会上传到 origin 下的 master 分支上，然而当 repository 和 branch 过多，而又没有设置关联时，git 就会产生疑问，因为它无法判断你的 push 目标。")]),t._v(" "),e("p",[t._v("解决办法其实就是确定这两个值，方法有两种：")]),t._v(" "),e("ul",[e("li",[t._v("第一种：如上图中的提示：git push --set-upstream origin master。其中的 origin 是你在 clone 远程代码时，git 为你创建的指向这个远程代码库的标签，它指向 repository。为了能清楚了解你要指向的 repository，可以用命令 git remote -v 进行查看。master 是你远程的 branch，可以用 git branch -a 查看所有分支，远程分支是红色的部分。然后确定好这两个值后，将命令中标粗的参数换掉即可。")]),t._v(" "),e("li",[t._v("第二种：git push -u origin master。同样根据自己的需要，替换 origin 和 master。")])]),t._v(" "),e("p",[t._v("两个命令的区别是第一条命令是要保证你的远程分支存在，如果不存在，也就无法进行关联。而第二条指令即使远程没有你要关联的分支，它也会自动创建一个出来，以实现关联。")]),t._v(" "),e("h2",{attrs:{id:"refusing-to-merge-unrelated-histories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#refusing-to-merge-unrelated-histories"}},[t._v("#")]),t._v(" refusing to merge unrelated histories")]),t._v(" "),e("p",[t._v("git pull origin master --allow-unrelated-histories")])])}),[],!1,null,null,null);r.default=a.exports}}]);