(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{221:function(t,e,a){t.exports=a.p+"assets/img/1.b49ea04b.png"},222:function(t,e,a){t.exports=a.p+"assets/img/2.101a8933.png"},223:function(t,e,a){t.exports=a.p+"assets/img/3.dbf97399.png"},224:function(t,e,a){t.exports=a.p+"assets/img/4.5911c599.png"},225:function(t,e,a){t.exports=a.p+"assets/img/5.943e723e.png"},226:function(t,e,a){t.exports=a.p+"assets/img/6.76624c83.png"},227:function(t,e,a){t.exports=a.p+"assets/img/7.cf1cdec6.png"},228:function(t,e,a){t.exports=a.p+"assets/img/8.761fe475.png"},271:function(t,e,a){"use strict";a.r(e);var s=a(28),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文"),s("OutboundLink")],1)])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#引言"}},[t._v("引言")])]),s("li",[s("a",{attrs:{href:"#容器的属性"}},[t._v("容器的属性")]),s("ul",[s("li",[s("a",{attrs:{href:"#flex-direction"}},[t._v("flex-direction")])]),s("li",[s("a",{attrs:{href:"#flex-wrap"}},[t._v("flex-wrap")])]),s("li",[s("a",{attrs:{href:"#flex-flow"}},[t._v("flex-flow")])]),s("li",[s("a",{attrs:{href:"#justify-content"}},[t._v("justify-content")])]),s("li",[s("a",{attrs:{href:"#align-items"}},[t._v("align-items")])]),s("li",[s("a",{attrs:{href:"#align-content"}},[t._v("align-content")])])])]),s("li",[s("a",{attrs:{href:"#项目的属性"}},[t._v("项目的属性")]),s("ul",[s("li",[s("a",{attrs:{href:"#order"}},[t._v("order")])]),s("li",[s("a",{attrs:{href:"#flex-grow"}},[t._v("flex-grow")])]),s("li",[s("a",{attrs:{href:"#flex-shrink"}},[t._v("flex-shrink")])]),s("li",[s("a",{attrs:{href:"#flex-basis"}},[t._v("flex-basis")])]),s("li",[s("a",{attrs:{href:"#flex"}},[t._v("flex")])]),s("li",[s("a",{attrs:{href:"#align-self"}},[t._v("align-self")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),s("p",[t._v("Flex 布局使得一个框体内部的排版更为便捷，比如栅格排版，自适应分配长宽，垂直居中等，原来可能需要很多样式配合来完成，使用 flex，就变得更 native 了。")]),t._v(" "),s("p",[t._v("Flex 布局主要由两层结构实现，外层 container 和内层 item，当然内层 item 也可以是更内层的 container")]),t._v(" "),s("ul",[s("li",[t._v("容器：外层 container")]),t._v(" "),s("li",[t._v("项目：内层 item")]),t._v(" "),s("li",[t._v("主轴：item 的排列方向")]),t._v(" "),s("li",[t._v("交叉轴：与主轴垂直")])]),t._v(" "),s("h2",{attrs:{id:"容器的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[t._v("#")]),t._v(" 容器的属性")]),t._v(" "),s("ul",[s("li",[t._v("flex-direction")]),t._v(" "),s("li",[t._v("flex-wrap")]),t._v(" "),s("li",[t._v("flex-flow")]),t._v(" "),s("li",[t._v("justify-content")]),t._v(" "),s("li",[t._v("align-items")]),t._v(" "),s("li",[t._v("align-content")])]),t._v(" "),s("h3",{attrs:{id:"flex-direction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),s("p",[t._v("主轴的方向")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// row 自左向右\n// row-reverse 自右向左\n// column 自上而下\n// row 自下向上\nflex-direction: row(default) | row-reverse | column | column-reverse;\n")])])]),s("p",[s("img",{attrs:{src:a(221),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"flex-wrap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),s("p",[t._v("控制项目的换行规则，因为默认不换号，当项目的宽度之和大于容器的宽度时，会根据项目的一些属性决定实际宽度分配")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// nowrap 不换行\n// wrap 换行，新行在下方\n// wrap-reverse 换行，新行在上方\nflex-wrap: nowrap(default) | wrap | wrap-reverse;\n")])])]),s("p",[s("img",{attrs:{src:a(222),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"flex-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),s("p",[t._v("是 flex-direction 和 flex-wrap 的缩写")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 默认 flex-flow: row nowrap\nflex-flow: <flex-direction> || <flex-wrap>;\n")])])]),s("h3",{attrs:{id:"justify-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),s("p",[t._v("主轴上的对齐方式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("justify-content: flex-start(default) | flex-end | center | space-between | space-around;\n")])])]),s("p",[s("img",{attrs:{src:a(223),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"align-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),s("p",[t._v("交叉轴上的对齐方式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// flex-start 交叉轴的起点对齐\n// flex-end 交叉轴的终点对齐\n// center 交叉轴的中点对齐\n// baseline 项目的第一行文字的基线对齐\n// stretch 如果项目未设置高度或设为auto，将占满整个容器的高度\nalign-items: flex-start | flex-end | center | baseline | stretch(default);\n")])])]),s("p",[s("img",{attrs:{src:a(224),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"align-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),s("p",[t._v("定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// flex-start 与交叉轴的起点对齐\n// flex-end 与交叉轴的终点对齐\n// center 与交叉轴的中点对齐\n// space-between 与交叉轴两端对齐，轴线之间的间隔平均分布\n// space-around 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍\n// stretch 轴线占满整个交叉轴\nalign-content: flex-start | flex-end | center | space-between | space-around | stretch(default);\n")])])]),s("p",[s("img",{attrs:{src:a(225),alt:""}}),t._v("\n重点看上图的 stretch，从 item 设了高度和没设高度 auto 的区别可看出，stretch 的原理是将交叉轴根据行数平分(交叉轴长度/行数)成若干份，如果设了高度，就用真是高度，没设高度就填充单份高度。")]),t._v(" "),s("h2",{attrs:{id:"项目的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目的属性"}},[t._v("#")]),t._v(" 项目的属性")]),t._v(" "),s("ul",[s("li",[t._v("order")]),t._v(" "),s("li",[t._v("flex-grow")]),t._v(" "),s("li",[t._v("flex-shrink")]),t._v(" "),s("li",[t._v("flex-basis")]),t._v(" "),s("li",[t._v("flex")]),t._v(" "),s("li",[t._v("align-self")])]),t._v(" "),s("h3",{attrs:{id:"order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" order")]),t._v(" "),s("p",[t._v("定义项目的排列顺序。数值越小，排列越靠前，可以是负数，相同时依 dom 顺序。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("order: <integer>; // 0 default\n")])])]),s("h3",{attrs:{id:"flex-grow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),s("p",[t._v("定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。负数无效，浏览器视作默认值 0。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("flex-grow: <number>; // 0 default\n")])])]),s("p",[s("img",{attrs:{src:a(226),alt:""}})]),t._v(" "),s("p",[t._v("注意放大比例是从剩余空间分配的，上图 item 最终实际宽度(px)：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("图一：")]),t._v(" "),s("ul",[s("li",[t._v("剩余宽度 restWidth = 300 - 3 × 50 = 150")]),t._v(" "),s("li",[t._v("红色宽度 redWidth = 1 / 3 × restWidth + 50 = 100")]),t._v(" "),s("li",[t._v("黄色宽度 yellowWidth = 2 / 3 × restWidth + 50 = 150")]),t._v(" "),s("li",[t._v("绿色宽度 greenWidth = 50")])])]),t._v(" "),s("li",[s("p",[t._v("图二：依次类推")])]),t._v(" "),s("li",[s("p",[t._v("图三：因为没有剩余宽度，发挥作用的是 flex-shrink")])])]),t._v(" "),s("h3",{attrs:{id:"flex-shrink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),s("p",[t._v("定义了项目的缩小比例，即如果空间不足，该项目将缩小，flex-shrink 属性为 0 时项目不缩小，负数无效，浏览器视作默认值 1。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("flex-shrink: <number>; // 1 default\n")])])]),s("p",[s("img",{attrs:{src:a(227),alt:""}})]),t._v(" "),s("p",[t._v("注意当 flex-shrink 属性为 0 的项目总宽度大于等于容器宽度时，即没有剩余空间分配时，其余 flex-shrink 属性不为 0 的项目宽度会缩小成刚好能够容纳内容，padding,margin 依然有效。上图 item 最终实际宽度(px)：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("图一：")]),t._v(" "),s("ul",[s("li",[t._v("剩余宽度：restWidth = 300 - 3 × 100 = 0")])])])]),t._v(" "),s("p",[t._v("所以 redWidth 和 yellowWidth 变成了能够容纳内容的最小宽度")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("图二：")]),t._v(" "),s("ul",[s("li",[t._v("剩余宽度：restWidth = 300 - 2 × 100 = 100")])])])]),t._v(" "),s("p",[t._v("所以 redWidth 和 yellowWidth 按照某种比例分配了 restWidth，分配策略还没弄清楚")]),t._v(" "),s("h3",{attrs:{id:"flex-basis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),s("p",[t._v("flex-grow 和 flex-shrink 都提到了剩余空间，其实就是根据这个属性计算的，它的默认值为 auto，即项目的本来大小。bootstrap4 的栅格系统就是用了这个属性替代了 bootstrap3 的 float:left+width%组合。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("flex-basis: <length> | auto; // auto default\n")])])]),s("h3",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),s("p",[t._v("是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。bootstrap4 的栅格系统用的是(0 0 %)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n")])])]),s("p",[s("img",{attrs:{src:a(228),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"align-self"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),s("p",[t._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("align-self: auto | flex-start | flex-end | center | baseline | stretch;\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);